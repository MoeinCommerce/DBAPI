<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ca88df16-7f15-44fa-8c7d-1eec43cacac6" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/.idea.DatabaseApi/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.DatabaseApi/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Erfan4708&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "https://github.com/MoeinCommerce/DBAPI.git",
    "accountId": "7fc2cb03-a61c-488a-bae6-d8cfa7df5389"
  }
}]]></component>
  <component name="HighlightingSettingsPerFile">
    <setting file="mock://C:/Users/MOEIN/source/repos/DatabaseApi/DatabaseApi/Contexts/Interfaces/ICompanyContext.cs" root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="true" />
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2o7QvwHgyqwIwK0QMwNykogenCr" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "main",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "com.github.copilot.settings.ApplicationConfigurable",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ca88df16-7f15-44fa-8c7d-1eec43cacac6" name="Changes" comment="" />
      <created>1730218369211</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1730218369211</updated>
      <workItem from="1730218370214" duration="8762000" />
      <workItem from="1730266633731" duration="3496000" />
      <workItem from="1730272057050" duration="1030000" />
      <workItem from="1730273118544" duration="2035000" />
      <workItem from="1730535224842" duration="1132000" />
      <workItem from="1730699689903" duration="7950000" />
    </task>
    <task id="LOCAL‎−۰۰۰۰۱" summary="Add isRequiredUpdate entry into methods that work with EntityMap tables">
      <option name="closed" value="true" />
      <created>1730223559220</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۱" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۱" />
      <updated>1730223559220</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۲" summary="Add methods for managing and filtering products&#10;&#10;- Added method to get all mapped products with an optional filter: GetAllMappedProducts.">
      <option name="closed" value="true" />
      <created>1730275157494</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۲" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۲" />
      <updated>1730275157494</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۳" summary="Create Warehouse.cs model">
      <option name="closed" value="true" />
      <created>1730703400486</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۳" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۳" />
      <updated>1730703400486</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۴" summary="Create PriceLevel.cs model">
      <option name="closed" value="true" />
      <created>1730704295368</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۴" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۴" />
      <updated>1730704295368</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۵" summary="Remove extra classes from project">
      <option name="closed" value="true" />
      <created>1730704327615</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۵" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۵" />
      <updated>1730704327615</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۶" summary="Create BaseCompanyContext abstract class for implementing ICompanyContext interface">
      <option name="closed" value="true" />
      <created>1730704384272</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۶" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۶" />
      <updated>1730704384272</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۷" summary="Create BaseDatabaseContext abstract class for implementing IDbContext interface">
      <option name="closed" value="true" />
      <created>1730704397126</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۷" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۷" />
      <updated>1730704397126</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۸" summary="Create a DbConfig class to store the configuration created in relation to the database">
      <option name="closed" value="true" />
      <created>1730704499966</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۸" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۸" />
      <updated>1730704499966</updated>
    </task>
    <task id="LOCAL‎−۰۰۰۰۹" summary="Implement methods for managing products, categories, price levels, and warehouses&#10;&#10;- Implemented methods for managing products: CreateProductMap, CreateProduct, UpdateProduct, DeleteProductMap, DeleteProductMapById, GetProducts, GetMappedProducts, GetUnMappedProducts, GetProductsBySearch, GetMappedProductsBySearch, GetUnMappedProductsBySearch, GetProductsNeedToUpdate.&#10;- Implemented methods for managing categories: CreateCategoryMap, CreateCategory, DeleteCategoryMap, DeleteCategoryMapById, GetAllCategories, GetMappedCategories, GetUnMappedCategories, GetCategoriesBySearch, GetMappedCategoriesBySearch, GetUnMappedCategoriesBySearch, GetCategoriesNeedToUpdate.&#10;- Implemented methods for managing price levels: GetPriceLevels.&#10;- Implemented methods for managing warehouses: GetWarehouses.&#10;- Implemented general methods: SaveChanges, SqlQuery, ExecuteRawSql, ExecuteRawSqlAsync, SwitchDatabase, Dispose.">
      <option name="closed" value="true" />
      <created>1730704583879</created>
      <option name="number" value="LOCAL‎−۰۰۰۰۹" />
      <option name="presentableId" value="LOCAL‎−۰۰۰۰۹" />
      <updated>1730704583879</updated>
    </task>
    <option name="localTasksCounter" value="10" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
  <component name="UnityProjectConfiguration" hasMinimizedUI="false" />
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="Add isRequiredUpdate entry into methods that work with EntityMap tables" />
    <MESSAGE value="Add methods for managing and filtering products&#10;&#10;- Added method to get all mapped products with an optional filter: GetAllMappedProducts." />
    <MESSAGE value="Create Warehouse.cs model" />
    <MESSAGE value="Create PriceLevel.cs model" />
    <MESSAGE value="Remove extra classes from project" />
    <MESSAGE value="Create BaseCompanyContext abstract class for implementing ICompanyContext interface" />
    <MESSAGE value="Create BaseDatabaseContext abstract class for implementing IDbContext interface" />
    <MESSAGE value="Create a DbConfig class to store the configuration created in relation to the database" />
    <MESSAGE value="Implement methods for managing products, categories, price levels, and warehouses&#10;&#10;- Implemented methods for managing products: CreateProductMap, CreateProduct, UpdateProduct, DeleteProductMap, DeleteProductMapById, GetProducts, GetMappedProducts, GetUnMappedProducts, GetProductsBySearch, GetMappedProductsBySearch, GetUnMappedProductsBySearch, GetProductsNeedToUpdate.&#10;- Implemented methods for managing categories: CreateCategoryMap, CreateCategory, DeleteCategoryMap, DeleteCategoryMapById, GetAllCategories, GetMappedCategories, GetUnMappedCategories, GetCategoriesBySearch, GetMappedCategoriesBySearch, GetUnMappedCategoriesBySearch, GetCategoriesNeedToUpdate.&#10;- Implemented methods for managing price levels: GetPriceLevels.&#10;- Implemented methods for managing warehouses: GetWarehouses.&#10;- Implemented general methods: SaveChanges, SqlQuery, ExecuteRawSql, ExecuteRawSqlAsync, SwitchDatabase, Dispose." />
    <option name="LAST_COMMIT_MESSAGE" value="Implement methods for managing products, categories, price levels, and warehouses&#10;&#10;- Implemented methods for managing products: CreateProductMap, CreateProduct, UpdateProduct, DeleteProductMap, DeleteProductMapById, GetProducts, GetMappedProducts, GetUnMappedProducts, GetProductsBySearch, GetMappedProductsBySearch, GetUnMappedProductsBySearch, GetProductsNeedToUpdate.&#10;- Implemented methods for managing categories: CreateCategoryMap, CreateCategory, DeleteCategoryMap, DeleteCategoryMapById, GetAllCategories, GetMappedCategories, GetUnMappedCategories, GetCategoriesBySearch, GetMappedCategoriesBySearch, GetUnMappedCategoriesBySearch, GetCategoriesNeedToUpdate.&#10;- Implemented methods for managing price levels: GetPriceLevels.&#10;- Implemented methods for managing warehouses: GetWarehouses.&#10;- Implemented general methods: SaveChanges, SqlQuery, ExecuteRawSql, ExecuteRawSqlAsync, SwitchDatabase, Dispose." />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>